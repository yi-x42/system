╔══════════════════════════════════════════════════════════════════════════════════════════╗
║                        YOLOv11 數位雙生分析系統 - 資料庫設計文件                          ║
║                                  Database Design Document                                  ║
╚══════════════════════════════════════════════════════════════════════════════════════════╝

專案名稱: YOLOv11 數位雙生分析系統
建立日期: 2025年7月23日
資料庫類型: PostgreSQL
ORM框架: SQLAlchemy
網路環境: Radmin VPN (26.86.64.166:8001)

════════════════════════════════════════════════════════════════════════════════════════════
                                    目錄 TABLE OF CONTENTS
════════════════════════════════════════════════════════════════════════════════════════════

1. 專案概述 (Project Overview)
2. 實體關係模型 (Entity Relationship Model - ERM)
3. 資料表結構 (Table Schema)
   3.1 分析記錄表 (analysis_records)
   3.2 檢測結果表 (detection_results)
   3.3 行為事件表 (behavior_events)
4. 索引設計 (Index Design)
5. 約束條件 (Constraints)
6. 關聯性說明 (Relationships)
7. 資料字典 (Data Dictionary)
8. 查詢範例 (Query Examples)

════════════════════════════════════════════════════════════════════════════════════════════
                                    1. 專案概述
════════════════════════════════════════════════════════════════════════════════════════════

【系統架構】
- 前端: Unity 3D (計劃中)
- 後端: FastAPI + Python 3.13
- 資料庫: PostgreSQL 15+
- AI模型: YOLOv11 物件檢測
- 網路: Radmin VPN 團隊協作

【核心功能】
- 影片/圖片物件檢測
- 即時行為分析
- 數位雙生可視化
- 團隊協作分析

【資料流程】
影片上傳 → YOLOv11檢測 → 資料庫儲存 → API查詢 → 前端展示

════════════════════════════════════════════════════════════════════════════════════════════
                              2. 實體關係模型 (ERM)
════════════════════════════════════════════════════════════════════════════════════════════

【實體 (Entities)】

┌─────────────────────┐
│   ANALYSIS_RECORDS  │  主實體 - 分析記錄
├─────────────────────┤
│ * id (PK)           │
│ * video_path        │
│ * video_name        │
│ * analysis_type     │
│ * status            │
│ * created_at        │
│   updated_at        │
│   total_detections  │
│   unique_objects    │
│   progress          │
│   (其他屬性...)     │
└─────────────────────┘
         │
         │ 1:N
         │
    ┌────▼────────────────┐                ┌────────────────────┐
    │  DETECTION_RESULTS  │                │  BEHAVIOR_EVENTS   │
    ├─────────────────────┤                ├────────────────────┤
    │ * id (PK)           │                │ * id (PK)          │
    │ * analysis_id (FK)  │◄──────────────►│ * analysis_id (FK) │
    │ * timestamp         │                │ * timestamp        │
    │ * frame_number      │                │ * event_type       │
    │ * object_type       │                │ * object_type      │
    │ * confidence        │                │ * severity         │
    │ * bbox_x1, y1       │                │ * position_x, y    │
    │ * bbox_x2, y2       │                │ * description      │
    │ * center_x, y       │                │ (其他屬性...)      │
    │ (其他屬性...)       │                └────────────────────┘
    └─────────────────────┘

【關聯性 (Relationships)】

1. ANALYSIS_RECORDS (1) ←→ (N) DETECTION_RESULTS
   - 一個分析記錄包含多個檢測結果
   - 透過 analysis_id 關聯

2. ANALYSIS_RECORDS (1) ←→ (N) BEHAVIOR_EVENTS
   - 一個分析記錄包含多個行為事件
   - 透過 analysis_id 關聯

3. DETECTION_RESULTS (N) ←→ (M) BEHAVIOR_EVENTS
   - 間接關聯，透過 analysis_id + timestamp 關聯
   - 檢測結果可能觸發行為事件

【基數標記法】
- (1) : 一對一
- (N) : 一對多
- (M) : 多對多
- * : 必填欄位 (NOT NULL)

════════════════════════════════════════════════════════════════════════════════════════════
                              3. 資料表結構 (Table Schema)
════════════════════════════════════════════════════════════════════════════════════════════

┌────────────────────────────────────────────────────────────────────────────────────────┐
│                           3.1 分析記錄表 (analysis_records)                            │
└────────────────────────────────────────────────────────────────────────────────────────┘

【資料表用途】
儲存每次影片分析任務的基本資訊、進度狀態和統計結果

【DDL 建立語句】
CREATE TABLE analysis_records (
    id                  SERIAL          PRIMARY KEY,
    created_at          TIMESTAMP       NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at          TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    video_path          VARCHAR(500)    NOT NULL,
    video_name          VARCHAR(255)    NOT NULL,
    analysis_type       VARCHAR(50)     NOT NULL DEFAULT 'detection',
    status              VARCHAR(50)     NOT NULL DEFAULT 'processing',
    total_detections    INTEGER         NOT NULL DEFAULT 0,
    unique_objects      INTEGER         NOT NULL DEFAULT 0,
    duration            FLOAT           DEFAULT NULL,
    fps                 FLOAT           DEFAULT NULL,
    total_frames        INTEGER         DEFAULT NULL,
    progress            FLOAT           NOT NULL DEFAULT 0.0,
    error_message       TEXT            DEFAULT NULL,
    model_version       VARCHAR(50)     DEFAULT NULL,
    processed_frames    INTEGER         NOT NULL DEFAULT 0,
    analysis_duration   FLOAT           DEFAULT NULL,
    output_path         VARCHAR(500)    DEFAULT NULL
);

【欄位詳細說明】
┌──────────────────┬───────────────┬─────────┬──────────────┬──────────────────────────────┐
│ 欄位名稱         │ 資料型別      │ 必填    │ 預設值       │ 說明                         │
├──────────────────┼───────────────┼─────────┼──────────────┼──────────────────────────────┤
│ id               │ SERIAL        │ ✓       │ AUTO         │ 主鍵，自動遞增               │
│ created_at       │ TIMESTAMP     │ ✓       │ CURRENT_TIME │ 建立時間戳記                 │
│ updated_at       │ TIMESTAMP     │         │ CURRENT_TIME │ 最後更新時間                 │
│ video_path       │ VARCHAR(500)  │ ✓       │ -            │ 影片檔案完整路徑             │
│ video_name       │ VARCHAR(255)  │ ✓       │ -            │ 影片檔案名稱                 │
│ analysis_type    │ VARCHAR(50)   │ ✓       │ 'detection'  │ 分析類型 (detection/annotation)│
│ status           │ VARCHAR(50)   │ ✓       │ 'processing' │ 處理狀態 (processing/completed/failed)│
│ total_detections │ INTEGER       │ ✓       │ 0            │ 總檢測物件數量               │
│ unique_objects   │ INTEGER       │ ✓       │ 0            │ 唯一物件類型數量             │
│ duration         │ FLOAT         │         │ NULL         │ 影片長度 (秒)                │
│ fps              │ FLOAT         │         │ NULL         │ 影片幀率                     │
│ total_frames     │ INTEGER       │         │ NULL         │ 影片總幀數                   │
│ progress         │ FLOAT         │ ✓       │ 0.0          │ 處理進度 (0.0-1.0)           │
│ error_message    │ TEXT          │         │ NULL         │ 錯誤訊息 (失敗時)            │
│ model_version    │ VARCHAR(50)   │         │ NULL         │ 使用的YOLO模型版本           │
│ processed_frames │ INTEGER       │ ✓       │ 0            │ 已處理的幀數                 │
│ analysis_duration│ FLOAT         │         │ NULL         │ 分析耗時 (秒)                │
│ output_path      │ VARCHAR(500)  │         │ NULL         │ 輸出檔案路徑 (標註影片)      │
└──────────────────┴───────────────┴─────────┴──────────────┴──────────────────────────────┘

【狀態值定義】
- 'processing' : 處理中
- 'completed'  : 已完成
- 'failed'     : 處理失敗

【分析類型定義】
- 'detection'  : 物件檢測
- 'annotation' : 影片標註

┌────────────────────────────────────────────────────────────────────────────────────────┐
│                           3.2 檢測結果表 (detection_results)                           │
└────────────────────────────────────────────────────────────────────────────────────────┘

【資料表用途】
儲存每個檢測到的物件詳細資訊，包含位置、信心度、追蹤資料等

【DDL 建立語句】
CREATE TABLE detection_results (
    id                  SERIAL          PRIMARY KEY,
    created_at          TIMESTAMP       NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at          TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    analysis_id         INTEGER         NOT NULL REFERENCES analysis_records(id) ON DELETE CASCADE,
    timestamp           FLOAT           NOT NULL,
    frame_number        INTEGER         NOT NULL,
    object_info         JSONB           NOT NULL,
    object_type         VARCHAR(50)     NOT NULL,
    object_chinese      VARCHAR(50)     DEFAULT NULL,
    confidence          FLOAT           NOT NULL CHECK (confidence >= 0.0 AND confidence <= 1.0),
    bbox_x1             FLOAT           NOT NULL,
    bbox_y1             FLOAT           NOT NULL,
    bbox_x2             FLOAT           NOT NULL,
    bbox_y2             FLOAT           NOT NULL,
    center_x            FLOAT           NOT NULL,
    center_y            FLOAT           NOT NULL,
    area                FLOAT           DEFAULT NULL,
    velocity_x          FLOAT           DEFAULT NULL,
    velocity_y          FLOAT           DEFAULT NULL,
    velocity_magnitude  FLOAT           DEFAULT NULL,
    track_id            VARCHAR(50)     DEFAULT NULL,
    zone                VARCHAR(50)     DEFAULT NULL,
    zone_chinese        VARCHAR(50)     DEFAULT NULL,
    distance_to_camera  FLOAT           DEFAULT NULL,
    relative_size       FLOAT           DEFAULT NULL,
    is_moving           BOOLEAN         DEFAULT NULL,
    occlusion_level     FLOAT           DEFAULT NULL CHECK (occlusion_level >= 0.0 AND occlusion_level <= 1.0),
    quality_score       FLOAT           DEFAULT NULL CHECK (quality_score >= 0.0 AND quality_score <= 1.0)
);

【欄位詳細說明】
┌──────────────────┬───────────────┬─────────┬──────────────┬──────────────────────────────┐
│ 欄位名稱         │ 資料型別      │ 必填    │ 約束條件     │ 說明                         │
├──────────────────┼───────────────┼─────────┼──────────────┼──────────────────────────────┤
│ id               │ SERIAL        │ ✓       │ PK           │ 主鍵，自動遞增               │
│ created_at       │ TIMESTAMP     │ ✓       │ -            │ 建立時間戳記                 │
│ updated_at       │ TIMESTAMP     │         │ -            │ 最後更新時間                 │
│ analysis_id      │ INTEGER       │ ✓       │ FK, CASCADE  │ 關聯分析記錄ID               │
│ timestamp        │ FLOAT         │ ✓       │ -            │ 影片中的時間點 (秒)          │
│ frame_number     │ INTEGER       │ ✓       │ -            │ 幀編號                       │
│ object_info      │ JSONB         │ ✓       │ -            │ 完整物件資訊JSON             │
│ object_type      │ VARCHAR(50)   │ ✓       │ -            │ 物件類型 (person, car, etc.) │
│ object_chinese   │ VARCHAR(50)   │         │ -            │ 物件中文名稱                 │
│ confidence       │ FLOAT         │ ✓       │ 0.0-1.0      │ 檢測信心度                   │
│ bbox_x1          │ FLOAT         │ ✓       │ -            │ 邊界框左上角X座標            │
│ bbox_y1          │ FLOAT         │ ✓       │ -            │ 邊界框左上角Y座標            │
│ bbox_x2          │ FLOAT         │ ✓       │ -            │ 邊界框右下角X座標            │
│ bbox_y2          │ FLOAT         │ ✓       │ -            │ 邊界框右下角Y座標            │
│ center_x         │ FLOAT         │ ✓       │ -            │ 物件中心X座標                │
│ center_y         │ FLOAT         │ ✓       │ -            │ 物件中心Y座標                │
│ area             │ FLOAT         │         │ -            │ 物件面積 (像素)              │
│ velocity_x       │ FLOAT         │         │ -            │ X方向速度 (像素/秒)          │
│ velocity_y       │ FLOAT         │         │ -            │ Y方向速度 (像素/秒)          │
│ velocity_magnitude│ FLOAT        │         │ -            │ 速度大小                     │
│ track_id         │ VARCHAR(50)   │         │ -            │ 物件追蹤ID                   │
│ zone             │ VARCHAR(50)   │         │ -            │ 檢測區域標識                 │
│ zone_chinese     │ VARCHAR(50)   │         │ -            │ 區域中文名稱                 │
│ distance_to_camera│ FLOAT        │         │ -            │ 估計距攝影機距離             │
│ relative_size    │ FLOAT         │         │ -            │ 相對於畫面的大小比例         │
│ is_moving        │ BOOLEAN       │         │ -            │ 是否移動中                   │
│ occlusion_level  │ FLOAT         │         │ 0.0-1.0      │ 遮擋程度                     │
│ quality_score    │ FLOAT         │         │ 0.0-1.0      │ 檢測品質評分                 │
└──────────────────┴───────────────┴─────────┴──────────────┴──────────────────────────────┘

【常見物件類型】
- person      : 人
- car         : 汽車
- truck       : 卡車
- bus         : 巴士
- bicycle     : 腳踏車
- motorcycle  : 機車
- train       : 火車
- boat        : 船

【區域標識】
- center      : 中央區域
- left        : 左側區域
- right       : 右側區域
- top         : 上方區域
- bottom      : 下方區域

┌────────────────────────────────────────────────────────────────────────────────────────┐
│                            3.3 行為事件表 (behavior_events)                            │
└────────────────────────────────────────────────────────────────────────────────────────┘

【資料表用途】
儲存檢測到的行為事件、異常狀況和智慧分析結果

【DDL 建立語句】
CREATE TABLE behavior_events (
    id                  SERIAL          PRIMARY KEY,
    created_at          TIMESTAMP       NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at          TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
    analysis_id         INTEGER         NOT NULL REFERENCES analysis_records(id) ON DELETE CASCADE,
    timestamp           FLOAT           NOT NULL,
    duration            FLOAT           DEFAULT NULL,
    event_type          VARCHAR(50)     NOT NULL,
    event_chinese       VARCHAR(50)     DEFAULT NULL,
    description         TEXT            DEFAULT NULL,
    severity            VARCHAR(20)     DEFAULT NULL,
    object_type         VARCHAR(50)     NOT NULL,
    object_chinese      VARCHAR(50)     DEFAULT NULL,
    position_x          FLOAT           DEFAULT NULL,
    position_y          FLOAT           DEFAULT NULL,
    zone                VARCHAR(50)     DEFAULT NULL,
    zone_chinese        VARCHAR(50)     DEFAULT NULL,
    participant_count   INTEGER         DEFAULT NULL,
    velocity            FLOAT           DEFAULT NULL,
    risk_score          FLOAT           DEFAULT NULL CHECK (risk_score >= 0.0 AND risk_score <= 1.0),
    alert_level         VARCHAR(20)     DEFAULT NULL,
    metadata            JSONB           DEFAULT NULL
);

【欄位詳細說明】
┌──────────────────┬───────────────┬─────────┬──────────────┬──────────────────────────────┐
│ 欄位名稱         │ 資料型別      │ 必填    │ 約束條件     │ 說明                         │
├──────────────────┼───────────────┼─────────┼──────────────┼──────────────────────────────┤
│ id               │ SERIAL        │ ✓       │ PK           │ 主鍵，自動遞增               │
│ created_at       │ TIMESTAMP     │ ✓       │ -            │ 建立時間戳記                 │
│ updated_at       │ TIMESTAMP     │         │ -            │ 最後更新時間                 │
│ analysis_id      │ INTEGER       │ ✓       │ FK, CASCADE  │ 關聯分析記錄ID               │
│ timestamp        │ FLOAT         │ ✓       │ -            │ 事件發生時間點 (秒)          │
│ duration         │ FLOAT         │         │ -            │ 事件持續時間 (秒)            │
│ event_type       │ VARCHAR(50)   │ ✓       │ -            │ 事件類型                     │
│ event_chinese    │ VARCHAR(50)   │         │ -            │ 事件中文名稱                 │
│ description      │ TEXT          │         │ -            │ 事件詳細描述                 │
│ severity         │ VARCHAR(20)   │         │ -            │ 嚴重程度                     │
│ object_type      │ VARCHAR(50)   │ ✓       │ -            │ 相關物件類型                 │
│ object_chinese   │ VARCHAR(50)   │         │ -            │ 物件中文名稱                 │
│ position_x       │ FLOAT         │         │ -            │ 事件位置X座標                │
│ position_y       │ FLOAT         │         │ -            │ 事件位置Y座標                │
│ zone             │ VARCHAR(50)   │         │ -            │ 事件發生區域                 │
│ zone_chinese     │ VARCHAR(50)   │         │ -            │ 區域中文名稱                 │
│ participant_count│ INTEGER       │         │ -            │ 參與事件的物件數量           │
│ velocity         │ FLOAT         │         │ -            │ 相關物件移動速度             │
│ risk_score       │ FLOAT         │         │ 0.0-1.0      │ 風險評分                     │
│ alert_level      │ VARCHAR(20)   │         │ -            │ 警示等級                     │
│ metadata         │ JSONB         │         │ -            │ 額外事件資料                 │
└──────────────────┴───────────────┴─────────┴──────────────┴──────────────────────────────┘

【事件類型定義】
- movement        : 移動
- stop           : 停止
- enter_zone     : 進入區域
- exit_zone      : 離開區域
- crowding       : 聚集
- speeding       : 快速移動
- loitering      : 徘徊
- crossing       : 穿越
- collision      : 碰撞
- abandoned      : 遺棄物件

【嚴重程度定義】
- low      : 低風險
- medium   : 中等風險
- high     : 高風險
- critical : 緊急

【警示等級定義】
- info     : 資訊
- warning  : 警告
- danger   : 危險

════════════════════════════════════════════════════════════════════════════════════════════
                                4. 索引設計 (Index Design)
════════════════════════════════════════════════════════════════════════════════════════════

【主要索引】

-- analysis_records 表索引
CREATE INDEX idx_analysis_records_status ON analysis_records(status);
CREATE INDEX idx_analysis_records_created_at ON analysis_records(created_at DESC);
CREATE INDEX idx_analysis_records_analysis_type ON analysis_records(analysis_type);

-- detection_results 表索引
CREATE INDEX idx_detection_results_analysis_id ON detection_results(analysis_id);
CREATE INDEX idx_detection_results_timestamp ON detection_results(timestamp);
CREATE INDEX idx_detection_results_object_type ON detection_results(object_type);
CREATE INDEX idx_detection_results_frame_number ON detection_results(frame_number);
CREATE INDEX idx_detection_results_confidence ON detection_results(confidence DESC);
CREATE INDEX idx_detection_results_composite ON detection_results(analysis_id, timestamp);

-- behavior_events 表索引
CREATE INDEX idx_behavior_events_analysis_id ON behavior_events(analysis_id);
CREATE INDEX idx_behavior_events_timestamp ON behavior_events(timestamp);
CREATE INDEX idx_behavior_events_event_type ON behavior_events(event_type);
CREATE INDEX idx_behavior_events_severity ON behavior_events(severity);
CREATE INDEX idx_behavior_events_risk_score ON behavior_events(risk_score DESC);

【複合索引】
CREATE INDEX idx_detection_analysis_time_type ON detection_results(analysis_id, timestamp, object_type);
CREATE INDEX idx_behavior_analysis_time_type ON behavior_events(analysis_id, timestamp, event_type);

【JSON 索引 (PostgreSQL 專用)】
CREATE INDEX idx_detection_object_info_gin ON detection_results USING GIN (object_info);
CREATE INDEX idx_behavior_metadata_gin ON behavior_events USING GIN (metadata);

════════════════════════════════════════════════════════════════════════════════════════════
                               5. 約束條件 (Constraints)
════════════════════════════════════════════════════════════════════════════════════════════

【主鍵約束 (Primary Key)】
- analysis_records.id
- detection_results.id  
- behavior_events.id

【外鍵約束 (Foreign Key)】
- detection_results.analysis_id → analysis_records.id (CASCADE DELETE)
- behavior_events.analysis_id → analysis_records.id (CASCADE DELETE)

【檢查約束 (Check Constraints)】
- detection_results.confidence BETWEEN 0.0 AND 1.0
- detection_results.occlusion_level BETWEEN 0.0 AND 1.0
- detection_results.quality_score BETWEEN 0.0 AND 1.0
- behavior_events.risk_score BETWEEN 0.0 AND 1.0
- analysis_records.progress BETWEEN 0.0 AND 1.0

【唯一約束 (Unique Constraints)】
-- 避免重複的檢測記錄
ALTER TABLE detection_results ADD CONSTRAINT unique_detection 
    UNIQUE(analysis_id, timestamp, frame_number, object_type, bbox_x1, bbox_y1);

【非空約束 (NOT NULL)】
所有標記為 ✓ 的必填欄位均有 NOT NULL 約束

════════════════════════════════════════════════════════════════════════════════════════════
                              6. 關聯性說明 (Relationships)
════════════════════════════════════════════════════════════════════════════════════════════

【一對多關聯】

1. analysis_records → detection_results
   - 關聯欄位: analysis_records.id ← detection_results.analysis_id
   - 關聯類型: 一對多 (1:N)
   - 刪除行為: CASCADE (刪除分析記錄時，相關檢測結果也會被刪除)
   - 業務意義: 一個分析任務包含多個檢測結果

2. analysis_records → behavior_events
   - 關聯欄位: analysis_records.id ← behavior_events.analysis_id
   - 關聯類型: 一對多 (1:N)
   - 刪除行為: CASCADE (刪除分析記錄時，相關行為事件也會被刪除)
   - 業務意義: 一個分析任務包含多個行為事件

【間接關聯】

3. detection_results ↔ behavior_events
   - 關聯方式: 透過 analysis_id + timestamp 間接關聯
   - 關聯類型: 多對多 (M:N)
   - 業務意義: 檢測結果可能觸發行為事件，行為事件基於檢測結果產生

【關聯查詢範例】
-- 查詢分析記錄及其檢測結果
SELECT ar.video_name, dr.object_type, COUNT(*) as detection_count
FROM analysis_records ar
LEFT JOIN detection_results dr ON ar.id = dr.analysis_id
GROUP BY ar.id, ar.video_name, dr.object_type;

-- 查詢分析記錄及其行為事件
SELECT ar.video_name, be.event_type, be.severity, COUNT(*) as event_count
FROM analysis_records ar
LEFT JOIN behavior_events be ON ar.id = be.analysis_id
GROUP BY ar.id, ar.video_name, be.event_type, be.severity;

════════════════════════════════════════════════════════════════════════════════════════════
                               7. 資料字典 (Data Dictionary)
════════════════════════════════════════════════════════════════════════════════════════════

【領域值 (Domain Values)】

Status Values (狀態值):
┌─────────────┬──────────────┬─────────────────────────────────────┐
│ 英文值      │ 中文說明     │ 描述                                │
├─────────────┼──────────────┼─────────────────────────────────────┤
│ processing  │ 處理中       │ 分析任務正在執行中                  │
│ completed   │ 已完成       │ 分析任務成功完成                    │
│ failed      │ 處理失敗     │ 分析任務執行失敗                    │
│ pending     │ 等待中       │ 分析任務排隊等待執行                │
│ cancelled   │ 已取消       │ 分析任務被使用者取消                │
└─────────────┴──────────────┴─────────────────────────────────────┘

Analysis Types (分析類型):
┌─────────────┬──────────────┬─────────────────────────────────────┐
│ 英文值      │ 中文說明     │ 描述                                │
├─────────────┼──────────────┼─────────────────────────────────────┤
│ detection   │ 物件檢測     │ 基本的物件檢測分析                  │
│ annotation  │ 影片標註     │ 帶有標註輸出的影片分析              │
│ tracking    │ 物件追蹤     │ 含有物件追蹤的進階分析              │
│ behavior    │ 行為分析     │ 含有行為事件檢測的智慧分析          │
└─────────────┴──────────────┴─────────────────────────────────────┘

Object Types (物件類型):
┌─────────────┬──────────────┬─────────────────────────────────────┐
│ 英文值      │ 中文說明     │ YOLO 類別 ID                        │
├─────────────┼──────────────┼─────────────────────────────────────┤
│ person      │ 人           │ 0                                   │
│ bicycle     │ 腳踏車       │ 1                                   │
│ car         │ 汽車         │ 2                                   │
│ motorcycle  │ 機車         │ 3                                   │
│ airplane    │ 飛機         │ 4                                   │
│ bus         │ 巴士         │ 5                                   │
│ train       │ 火車         │ 6                                   │
│ truck       │ 卡車         │ 7                                   │
│ boat        │ 船           │ 8                                   │
│ traffic_light│ 交通燈       │ 9                                   │
└─────────────┴──────────────┴─────────────────────────────────────┘

Event Types (事件類型):
┌─────────────┬──────────────┬─────────────────────────────────────┐
│ 英文值      │ 中文說明     │ 觸發條件                            │
├─────────────┼──────────────┼─────────────────────────────────────┤
│ movement    │ 移動         │ 物件位置變化超過閾值                │
│ stop        │ 停止         │ 物件速度降至零並持續一定時間        │
│ enter_zone  │ 進入區域     │ 物件中心點進入指定區域              │
│ exit_zone   │ 離開區域     │ 物件中心點離開指定區域              │
│ crowding    │ 聚集         │ 特定區域內物件數量超過閾值          │
│ speeding    │ 快速移動     │ 物件移動速度超過設定閾值            │
│ loitering   │ 徘徊         │ 物件在小範圍內停留超過設定時間      │
│ crossing    │ 穿越         │ 物件穿越指定的邊界線                │
│ collision   │ 碰撞         │ 兩個或多個物件邊界框重疊            │
│ abandoned   │ 遺棄物件     │ 物件長時間無人認領或移動            │
└─────────────┴──────────────┴─────────────────────────────────────┘

Severity Levels (嚴重程度):
┌─────────────┬──────────────┬─────────────────────────────────────┐
│ 英文值      │ 中文說明     │ 風險等級                            │
├─────────────┼──────────────┼─────────────────────────────────────┤
│ low         │ 低           │ 一般性事件，無需特別關注            │
│ medium      │ 中等         │ 需要關注的事件                      │
│ high        │ 高           │ 重要事件，需要立即處理              │
│ critical    │ 緊急         │ 緊急事件，需要立即響應              │
└─────────────┴──────────────┴─────────────────────────────────────┘

Alert Levels (警示等級):
┌─────────────┬──────────────┬─────────────────────────────────────┐
│ 英文值      │ 中文說明     │ 處理方式                            │
├─────────────┼──────────────┼─────────────────────────────────────┤
│ info        │ 資訊         │ 記錄到日誌，無需特別動作            │
│ warning     │ 警告         │ 顯示警告訊息，提醒操作員            │
│ danger      │ 危險         │ 觸發警報，需要立即介入              │
└─────────────┴──────────────┴─────────────────────────────────────┘

【業務規則 (Business Rules)】

1. 資料保留政策
   - 分析記錄保留 1 年
   - 檢測結果保留 6 個月
   - 行為事件保留 1 年
   - 重要事件 (severity >= high) 永久保留

2. 資料品質規則
   - confidence >= 0.25 的檢測結果才會儲存
   - 同一幀中相同物件的重複檢測會被過濾
   - 行為事件必須基於有效的檢測結果

3. 效能規則
   - 單次分析的檢測結果不超過 100,000 筆
   - 批次插入優於單筆插入
   - 定期清理過期資料以維持效能

════════════════════════════════════════════════════════════════════════════════════════════
                               8. 查詢範例 (Query Examples)
════════════════════════════════════════════════════════════════════════════════════════════

【基本查詢】

-- 1. 查看最近的分析記錄
SELECT 
    id, 
    video_name, 
    status, 
    total_detections, 
    progress,
    created_at 
FROM analysis_records 
ORDER BY created_at DESC 
LIMIT 10;

-- 2. 查看檢測結果統計
SELECT 
    object_chinese,
    object_type,
    COUNT(*) as detection_count,
    AVG(confidence) as avg_confidence,
    MIN(confidence) as min_confidence,
    MAX(confidence) as max_confidence
FROM detection_results 
GROUP BY object_chinese, object_type 
ORDER BY detection_count DESC;

-- 3. 查看行為事件統計
SELECT 
    event_chinese,
    event_type,
    severity,
    COUNT(*) as event_count
FROM behavior_events 
GROUP BY event_chinese, event_type, severity
ORDER BY event_count DESC;

【進階查詢】

-- 4. 查詢特定時間範圍的高信心度檢測
SELECT 
    ar.video_name,
    dr.object_type,
    dr.confidence,
    dr.timestamp,
    dr.center_x,
    dr.center_y
FROM analysis_records ar
JOIN detection_results dr ON ar.id = dr.analysis_id
WHERE dr.confidence >= 0.8
  AND ar.created_at >= '2025-07-01'
  AND ar.created_at < '2025-08-01'
ORDER BY dr.confidence DESC;

-- 5. 查詢包含高風險事件的分析
SELECT 
    ar.video_name,
    ar.created_at,
    be.event_type,
    be.severity,
    be.risk_score,
    be.description
FROM analysis_records ar
JOIN behavior_events be ON ar.id = be.analysis_id
WHERE be.severity IN ('high', 'critical')
   OR be.risk_score >= 0.8
ORDER BY be.risk_score DESC, ar.created_at DESC;

-- 6. 查詢物件移動軌跡
SELECT 
    track_id,
    timestamp,
    center_x,
    center_y,
    velocity_magnitude
FROM detection_results
WHERE analysis_id = 1
  AND track_id IS NOT NULL
  AND object_type = 'person'
ORDER BY track_id, timestamp;

【統計分析查詢】

-- 7. 每日檢測統計
SELECT 
    DATE(ar.created_at) as analysis_date,
    COUNT(DISTINCT ar.id) as total_analyses,
    COUNT(dr.id) as total_detections,
    COUNT(DISTINCT dr.object_type) as unique_object_types,
    AVG(dr.confidence) as avg_confidence
FROM analysis_records ar
LEFT JOIN detection_results dr ON ar.id = dr.analysis_id
WHERE ar.created_at >= CURRENT_DATE - INTERVAL '30 days'
GROUP BY DATE(ar.created_at)
ORDER BY analysis_date DESC;

-- 8. 物件類型分布分析
SELECT 
    dr.object_type,
    dr.object_chinese,
    COUNT(*) as detection_count,
    COUNT(DISTINCT dr.analysis_id) as appeared_in_analyses,
    ROUND(AVG(dr.confidence), 3) as avg_confidence,
    ROUND(AVG(dr.area), 2) as avg_area
FROM detection_results dr
GROUP BY dr.object_type, dr.object_chinese
HAVING COUNT(*) >= 10
ORDER BY detection_count DESC;

-- 9. 行為事件趨勢分析
SELECT 
    DATE_TRUNC('hour', 
        ar.created_at + INTERVAL '1 second' * be.timestamp
    ) as event_hour,
    be.event_type,
    be.severity,
    COUNT(*) as event_count
FROM behavior_events be
JOIN analysis_records ar ON be.analysis_id = ar.id
WHERE ar.created_at >= CURRENT_DATE - INTERVAL '7 days'
GROUP BY event_hour, be.event_type, be.severity
ORDER BY event_hour DESC, event_count DESC;

【效能查詢】

-- 10. 查詢系統效能指標
SELECT 
    COUNT(DISTINCT ar.id) as total_analyses,
    COUNT(dr.id) as total_detections,
    COUNT(be.id) as total_events,
    ROUND(AVG(ar.analysis_duration), 2) as avg_analysis_time,
    ROUND(AVG(ar.total_frames / NULLIF(ar.analysis_duration, 0)), 2) as avg_fps_processed,
    COUNT(CASE WHEN ar.status = 'completed' THEN 1 END) as completed_analyses,
    COUNT(CASE WHEN ar.status = 'failed' THEN 1 END) as failed_analyses
FROM analysis_records ar
LEFT JOIN detection_results dr ON ar.id = dr.analysis_id
LEFT JOIN behavior_events be ON ar.id = be.analysis_id
WHERE ar.created_at >= CURRENT_DATE - INTERVAL '30 days';

【資料清理查詢】

-- 11. 清理過期資料 (謹慎使用)
-- 刪除 6 個月前的檢測結果
DELETE FROM detection_results 
WHERE id IN (
    SELECT dr.id 
    FROM detection_results dr
    JOIN analysis_records ar ON dr.analysis_id = ar.id
    WHERE ar.created_at < CURRENT_DATE - INTERVAL '6 months'
);

-- 12. 清理失敗的分析記錄 (1 個月前)
DELETE FROM analysis_records 
WHERE status = 'failed' 
  AND created_at < CURRENT_DATE - INTERVAL '1 month';

════════════════════════════════════════════════════════════════════════════════════════════
                                    附錄 APPENDIX
════════════════════════════════════════════════════════════════════════════════════════════

【系統資訊】
- 文件版本: 1.0.0
- 建立日期: 2025年7月23日
- 資料庫版本: PostgreSQL 15+
- ORM 版本: SQLAlchemy 2.0+
- API 框架: FastAPI 0.104+

【維護資訊】
- 定期備份: 每日
- 索引重建: 每週
- 統計資料更新: 每日
- 效能監控: 即時

【聯絡資訊】
- 專案負責人: YOLOv11 開發團隊
- 技術支援: 透過 Radmin 網路 (26.86.64.166:8001/docs)
- 文件位置: /yolo_backend/YOLOv11_資料庫設計文件.txt

【版權資訊】
本文件為 YOLOv11 數位雙生分析系統之內部技術文件，
僅供專案開發團隊內部使用，請勿外洩。

═══════════════════════════════════════════════════════════════════════════════════════════
                                    文件結束
═══════════════════════════════════════════════════════════════════════════════════════════
